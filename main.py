import discord
from discord.ext import commands
import asyncio
import os
from datetime import datetime

intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True
intents.reactions = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ---------- !clear –∫–æ–º–∞–Ω–¥–∞ ----------
@bot.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int = 10):
    await ctx.channel.purge(limit=amount + 1)
    await ctx.send(f"‚úÖ –û—á–∏—â–µ–Ω–æ {amount} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.", delete_after=5)

# ---------- –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å ----------
reaction_options = ["üëçüèª", "‚ùì", "üëéüèª"]

@bot.command()
async def –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å(ctx, –Ω–∞–∑–≤–∞: str, *, –æ–ø–∏—Å: str):
    embed = discord.Embed(title=–Ω–∞–∑–≤–∞, description=–æ–ø–∏—Å, color=0x2ecc71)
    embed.add_field(name="–ß–∞—Å", value=f"<t:{int(datetime.now().timestamp())}:F>", inline=False)

    for emoji in reaction_options:
        embed.add_field(name=emoji, value="‚Äî", inline=True)

    message = await ctx.send(embed=embed)

    for emoji in reaction_options:
        await message.add_reaction(emoji)

    participants = {emoji: [] for emoji in reaction_options}

    await asyncio.sleep(1)  # –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –∑–±–æ—Ä–æ–º —Ä–µ–∞–∫—Ü—ñ–π

    def check(reaction, user):
        return (
            reaction.message.id == message.id
            and str(reaction.emoji) in reaction_options
            and not user.bot
        )

    async def update_embed():
        for emoji in reaction_options:
            users = [user.mention for user in participants[emoji]]
            if not users:
                value = "‚Äî"
            else:
                value = " ".join(users)
            for field in embed.fields:
                if field.name == emoji:
                    field.value = value
        await message.edit(embed=embed)

    while True:
        try:
            reaction, user = await bot.wait_for("reaction_add", timeout=180, check=check)

            # –ó–Ω—è—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—é —Ä–µ–∞–∫—Ü—ñ—é, —è–∫—â–æ —î
            for emoji in reaction_options:
                if user in participants[emoji]:
                    participants[emoji].remove(user)
                    async for r in message.reactions:
                        if str(r.emoji) == emoji:
                            await r.remove(user)

            participants[str(reaction.emoji)].append(user)
            await update_embed()
        except asyncio.TimeoutError:
            break

# ---------- –¢–≤—ñ–Ω–∏ ----------
from discord import Embed

twin_names = [f"–¢–≤—ñ–Ω {i}" for i in range(1, 10)]
twin_emojis = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£"]
control_emojis = ["‚ùå", "üîÅ"]
all_emojis = twin_emojis + control_emojis

twin_data = {}

@bot.command(name="—Ç–≤—ñ–Ω–∏")
async def —Ç–≤—ñ–Ω–∏(ctx):
    embed = Embed(title="–û–±–µ—Ä–∏ –¢–≤—ñ–Ω–∞", color=0x3498db)
    embed.description = "\n".join(
        [f"{emoji} {name} ‚Äî" for emoji, name in zip(twin_emojis, twin_names)]
    )
    message = await ctx.send(embed=embed)

    for emoji in all_emojis:
        await message.add_reaction(emoji)

    twin_data[message.id] = {
        "msg": message,
        "assignments": {},  # user_id -> index
    }

async def –æ–Ω–æ–≤–∏—Ç–∏_twin_embed(message, data):
    lines = []
    assigned = {i: None for i in range(9)}
    for user_id, index in data["assignments"].items():
        assigned[index] = f"<@{user_id}>"

    for i, (emoji, name) in enumerate(zip(twin_emojis, twin_names)):
        user_display = assigned[i] if assigned[i] else "‚Äî"
        lines.append(f"{emoji} {name} ‚Äî {user_display}")

    embed = Embed(title="–û–±–µ—Ä–∏ –¢–≤—ñ–Ω–∞", description="\n".join(lines), color=0x3498db)
    await message.edit(embed=embed)

@bot.event
async def on_reaction_add(reaction, user):
    if user.bot or reaction.message.id not in twin_data:
        return

    data = twin_data[reaction.message.id]
    emoji = str(reaction.emoji)

    if emoji in twin_emojis:
        index = twin_emojis.index(emoji)
        # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –≤–∏–±–æ—Ä–∏
        for e, i in list(data["assignments"].items()):
            if e == user.id or i == index:
                del data["assignments"][e]
        data["assignments"][user.id] = index
        await –æ–Ω–æ–≤–∏—Ç–∏_twin_embed(reaction.message, data)

    elif emoji == "‚ùå":
        if user.id in data["assignments"]:
            del data["assignments"][user.id]
        await –æ–Ω–æ–≤–∏—Ç–∏_twin_embed(reaction.message, data)

    elif emoji == "üîÅ":
        data["assignments"].clear()
        await –æ–Ω–æ–≤–∏—Ç–∏_twin_embed(reaction.message, data)

    await reaction.remove(user)

# ---------- –ó–∞–ø—É—Å–∫ ----------
TOKEN = os.getenv("TOKEN")
bot.run(TOKEN)