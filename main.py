from keep_alive import keep_alive
import discord
from discord.ext import commands
import datetime
import pytz
import asyncio
import os

intents = discord.Intents.default()
intents.message_content = True
intents.reactions = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

reaction_data = {}
twin_data = {}

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω–æ!")

@bot.command(name="–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å")
async def –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å(ctx, *, args):
    try:
        await ctx.message.delete()

        —á–∞—Å—Ç–∏–Ω–∏ = args.split("|")
        if len(—á–∞—Å—Ç–∏–Ω–∏) < 2:
            await ctx.send("‚ùå –§–æ—Ä–º–∞—Ç:\n`!–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ù–∞–∑–≤–∞ | –û–ø–∏—Å | –î–∞—Ç–∞`\n–∞–±–æ\n`!–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ù–∞–∑–≤–∞ | –î–∞—Ç–∞`", delete_after=10)
            return

        –Ω–∞–∑–≤–∞ = —á–∞—Å—Ç–∏–Ω–∏[0].strip()

        if len(—á–∞—Å—Ç–∏–Ω–∏) == 2:
            –æ–ø–∏—Å = ""
            –¥–∞—Ç–∞_—á–∞—Å = —á–∞—Å—Ç–∏–Ω–∏[1].strip()
            —Ç–∞–π–º–∑–æ–Ω–∞ = "Europe/Kyiv"
        elif len(—á–∞—Å—Ç–∏–Ω–∏) >= 3:
            –æ–ø–∏—Å = —á–∞—Å—Ç–∏–Ω–∏[1].strip()
            –¥–∞—Ç–∞_—á–∞—Å = —á–∞—Å—Ç–∏–Ω–∏[2].strip()
            —Ç–∞–π–º–∑–æ–Ω–∞ = —á–∞—Å—Ç–∏–Ω–∏[3].strip() if len(—á–∞—Å—Ç–∏–Ω–∏) >= 4 else "Europe/Kyiv"

        dt = datetime.datetime.strptime(–¥–∞—Ç–∞_—á–∞—Å, "%Y-%m-%d %H:%M")
        –ª–æ–∫–∞–ª—å–Ω–∞_—Ç–∞–π–º–∑–æ–Ω–∞ = pytz.timezone(—Ç–∞–π–º–∑–æ–Ω–∞)
        –ª–æ–∫–∞–ª—å–Ω–∏–π_—á–∞—Å = –ª–æ–∫–∞–ª—å–Ω–∞_—Ç–∞–π–º–∑–æ–Ω–∞.localize(dt)
        —á–∞—Å_utc = –ª–æ–∫–∞–ª—å–Ω–∏–π_—á–∞—Å.astimezone(pytz.utc)

        –∑–∞—Ä–∞–∑ = datetime.datetime.now(pytz.utc)
        –∑–∞–ª–∏—à–∏–ª–æ—Å—å = —á–∞—Å_utc - –∑–∞—Ä–∞–∑

        if –∑–∞–ª–∏—à–∏–ª–æ—Å—å.total_seconds() <= 0:
            await ctx.send("‚ùå –í–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞/—á–∞—Å —É–∂–µ –º–∏–Ω—É–ª–∏.", delete_after=5)
            return

        —É—á–∞—Å–Ω–∏–∫–∏ = {"üëçüèª": [], "‚ùì": [], "üëéüèª": []}
        timestamp = int(—á–∞—Å_utc.timestamp())

        embed = discord.Embed(title=f"üì¢ {–Ω–∞–∑–≤–∞}", color=0x00ff00)
        embed.description = f"{–æ–ø–∏—Å}\n\nüìÖ <t:{timestamp}:F> (<t:{timestamp}:R>)" if –æ–ø–∏—Å else f"üìÖ <t:{timestamp}:F> (<t:{timestamp}:R>)"

        for emoji in —É—á–∞—Å–Ω–∏–∫–∏:
            embed.add_field(name=f"{emoji} (0)", value="–ù—ñ—Ö—Ç–æ", inline=True)

        –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è = await ctx.send(embed=embed)

        reaction_data[–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.id] = {
            "message": –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è,
            "—É—á–∞—Å–Ω–∏–∫–∏": —É—á–∞—Å–Ω–∏–∫–∏
        }

        for emoji in —É—á–∞—Å–Ω–∏–∫–∏:
            await –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.add_reaction(emoji)

        await asyncio.sleep(–∑–∞–ª–∏—à–∏–ª–æ—Å—å.total_seconds())
        await –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.delete()

    except Exception as e:
        await ctx.send(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {e}", delete_after=10)

async def –æ–Ω–æ–≤–∏—Ç–∏_–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å_embed(–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –¥–∞–Ω—ñ):
    —Å—Ç–∞—Ä–∏–π = –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.embeds[0]
    –Ω–æ–≤–∏–π = discord.Embed(title=—Å—Ç–∞—Ä–∏–π.title, description=—Å—Ç–∞—Ä–∏–π.description, color=—Å—Ç–∞—Ä–∏–π.color)

    —É—á–∞—Å–Ω–∏–∫–∏ = –¥–∞–Ω—ñ["—É—á–∞—Å–Ω–∏–∫–∏"]
    for emoji in ["üëçüèª", "‚ùì", "üëéüèª"]:
        —Å–ø–∏—Å–æ–∫ = "\n".join(—É—á–∞—Å–Ω–∏–∫–∏[emoji]) if —É—á–∞—Å–Ω–∏–∫–∏[emoji] else "–ù—ñ—Ö—Ç–æ"
        –Ω–æ–≤–∏–π.add_field(name=f"{emoji} ({len(—É—á–∞—Å–Ω–∏–∫–∏[emoji])})", value=—Å–ø–∏—Å–æ–∫, inline=True)

    await –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.edit(embed=–Ω–æ–≤–∏–π)

@bot.command(name="—Ç–≤—ñ–Ω")
async def —Ç–≤—ñ–Ω(ctx):
    await ctx.message.delete()

    —Ç–≤—ñ–Ω–∏ = [f"–¢–≤—ñ–Ω {i}" for i in range(1, 10)]
    emojis = ['1Ô∏è‚É£','2Ô∏è‚É£','3Ô∏è‚É£','4Ô∏è‚É£','5Ô∏è‚É£','6Ô∏è‚É£','7Ô∏è‚É£','8Ô∏è‚É£','9Ô∏è‚É£']
    emoji_map = dict(zip(emojis, —Ç–≤—ñ–Ω–∏))

    –¥–∞–Ω—ñ = {—Ç–≤—ñ–Ω: "" for —Ç–≤—ñ–Ω in —Ç–≤—ñ–Ω–∏}

    embed = discord.Embed(title="üåÄ –û–±–µ—Ä–∏ —Å–≤–æ–≥–æ –¢–≤—ñ–Ω–∞", color=0x0099ff)
    —Ç–µ–∫—Å—Ç = "\n".join([f"**{—Ç–≤—ñ–Ω}** - {–¥–∞–Ω—ñ[—Ç–≤—ñ–Ω]}" for —Ç–≤—ñ–Ω in —Ç–≤—ñ–Ω–∏])
    embed.description = —Ç–µ–∫—Å—Ç

    –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è = await ctx.send(embed=embed)

    twin_data[–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.id] = {
        "message": –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è,
        "–¥–∞–Ω—ñ": –¥–∞–Ω—ñ,
        "emoji_map": emoji_map
    }

    for emoji in emojis + ['‚ùå', 'üîÅ']:
        await –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.add_reaction(emoji)

@bot.command(name="clear")
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int = 10):
    await ctx.message.delete()
    deleted = await ctx.channel.purge(limit=amount)
    await ctx.send(f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ {len(deleted)} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å", delete_after=5)

@bot.event
async def on_reaction_add(reaction, user):
    if user.bot:
        return

    message_id = reaction.message.id
    emoji = str(reaction.emoji)

    # –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
    if message_id in reaction_data and emoji in ["üëçüèª", "‚ùì", "üëéüèª"]:
        –¥–∞–Ω—ñ = reaction_data[message_id]
        —É—á–∞—Å–Ω–∏–∫–∏ = –¥–∞–Ω—ñ["—É—á–∞—Å–Ω–∏–∫–∏"]

        for —ñ–Ω—à–µ_–µ–º–æ–¥–∂—ñ in ["üëçüèª", "‚ùì", "üëéüèª"]:
            if user.mention in —É—á–∞—Å–Ω–∏–∫–∏[—ñ–Ω—à–µ_–µ–º–æ–¥–∂—ñ]:
                —É—á–∞—Å–Ω–∏–∫–∏[—ñ–Ω—à–µ_–µ–º–æ–¥–∂—ñ].remove(user.mention)

        if user.mention not in —É—á–∞—Å–Ω–∏–∫–∏[emoji]:
            —É—á–∞—Å–Ω–∏–∫–∏[emoji].append(user.mention)

        try:
            await reaction.message.remove_reaction(emoji, user)
        except:
            pass

        await –æ–Ω–æ–≤–∏—Ç–∏_–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å_embed(reaction.message, –¥–∞–Ω—ñ)

    # –¢–≤—ñ–Ω–∏
    elif message_id in twin_data:
        twin = twin_data[message_id]
        if emoji == 'üîÅ':
            for –∫–ª—é—á in twin["–¥–∞–Ω—ñ"]:
                twin["–¥–∞–Ω—ñ"][–∫–ª—é—á] = ""
        elif emoji == '‚ùå':
            for –∫–ª—é—á in twin["–¥–∞–Ω—ñ"]:
                if user.mention in twin["–¥–∞–Ω—ñ"][–∫–ª—é—á]:
                    twin["–¥–∞–Ω—ñ"][–∫–ª—é—á] = ""
        elif emoji in twin["emoji_map"]:
            for –∫–ª—é—á in twin["–¥–∞–Ω—ñ"]:
                if user.mention in twin["–¥–∞–Ω—ñ"][–∫–ª—é—á]:
                    twin["–¥–∞–Ω—ñ"][–∫–ª—é—á] = ""

            —Ç–≤—ñ–Ω = twin["emoji_map"][emoji]
            twin["–¥–∞–Ω—ñ"][—Ç–≤—ñ–Ω] = user.mention

        —Ç–µ–∫—Å—Ç = "\n".join([f"**{—Ç–≤—ñ–Ω}** - {twin['–¥–∞–Ω—ñ'][—Ç–≤—ñ–Ω]}" for —Ç–≤—ñ–Ω in twin["–¥–∞–Ω—ñ"]])
        –Ω–æ–≤–∏–π_embed = discord.Embed(title="üåÄ –û–±–µ—Ä–∏ —Å–≤–æ–≥–æ –¢–≤—ñ–Ω–∞", description=—Ç–µ–∫—Å—Ç, color=0x0099ff)

        await reaction.message.edit(embed=–Ω–æ–≤–∏–π_embed)

        try:
            await reaction.message.remove_reaction(emoji, user)
        except:
            pass

keep_alive()
bot.run(os.getenv("DISCORD_TOKEN"))